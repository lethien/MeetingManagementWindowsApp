<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MeetingManagementDataSet" targetNamespace="http://tempuri.org/MeetingManagementDataSet.xsd" xmlns:mstns="http://tempuri.org/MeetingManagementDataSet.xsd" xmlns="http://tempuri.org/MeetingManagementDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MeetingManagementDatabaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MeetingManagementDatabaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ProjectTeam04TermProject.Properties.Settings.GlobalReference.Default.MeetingManagementDatabaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupTableAdapter" GeneratorDataComponentClassName="GroupTableAdapter" Name="Group" UserDataComponentName="GroupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MeetingManagementDatabaseConnectionString (Settings)" DbObjectName="MeetingManagementDatabase.dbo.[Group]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Group] WHERE (([Id] = @Original_Id) AND ([GroupName] = @Original_GroupName) AND ([Disabled] = @Original_Disabled))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_GroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Disabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Disabled" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Group] ([GroupName], [Disabled]) VALUES (@GroupName, @Disabled);
SELECT Id, GroupName, Disabled FROM [Group] WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Disabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Disabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, GroupName, Disabled FROM dbo.[Group]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Group] SET [GroupName] = @GroupName, [Disabled] = @Disabled WHERE (([Id] = @Original_Id) AND ([GroupName] = @Original_GroupName) AND ([Disabled] = @Original_Disabled));
SELECT Id, GroupName, Disabled FROM [Group] WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Disabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Disabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_GroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Disabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Disabled" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="GroupName" DataSetColumn="GroupName" />
              <Mapping SourceColumn="Disabled" DataSetColumn="Disabled" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupUserTableAdapter" GeneratorDataComponentClassName="GroupUserTableAdapter" Name="GroupUser" UserDataComponentName="GroupUserTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MeetingManagementDatabaseConnectionString (Settings)" DbObjectName="MeetingManagementDatabase.dbo.GroupUser" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[GroupUser] WHERE (([GroupId] = @Original_GroupId) AND ([UserId] = @Original_UserId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[GroupUser] ([GroupId], [UserId]) VALUES (@GroupId, @UserId);
SELECT GroupId, UserId FROM GroupUser WHERE (GroupId = @GroupId) AND (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GroupId, UserId FROM dbo.GroupUser</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[GroupUser] SET [GroupId] = @GroupId, [UserId] = @UserId WHERE (([GroupId] = @Original_GroupId) AND ([UserId] = @Original_UserId));
SELECT GroupId, UserId FROM GroupUser WHERE (GroupId = @GroupId) AND (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GroupId" DataSetColumn="GroupId" />
              <Mapping SourceColumn="UserId" DataSetColumn="UserId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MeetingTableAdapter" GeneratorDataComponentClassName="MeetingTableAdapter" Name="Meeting" UserDataComponentName="MeetingTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MeetingManagementDatabaseConnectionString (Settings)" DbObjectName="MeetingManagementDatabase.dbo.Meeting" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Meeting] WHERE (([Id] = @Original_Id) AND ([Title] = @Original_Title) AND ([Description] = @Original_Description) AND ([From] = @Original_From) AND ([To] = @Original_To) AND ([MeetingRoomId] = @Original_MeetingRoomId) AND ([CreatedBy] = @Original_CreatedBy) AND ([Canceled] = @Original_Canceled))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_From" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="From" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_To" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="To" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MeetingRoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MeetingRoomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CreatedBy" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreatedBy" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Canceled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Canceled" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Meeting] ([Title], [Description], [From], [To], [MeetingRoomId], [Notes], [CreatedBy], [Canceled]) VALUES (@Title, @Description, @From, @To, @MeetingRoomId, @Notes, @CreatedBy, @Canceled);
SELECT Id, Title, Description, [From], [To], MeetingRoomId, Notes, CreatedBy, Canceled FROM Meeting WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@From" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="From" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@To" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="To" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MeetingRoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MeetingRoomId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Notes" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Notes" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CreatedBy" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreatedBy" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Canceled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Canceled" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Title, Description, [From], [To], MeetingRoomId, Notes, CreatedBy, Canceled FROM dbo.Meeting</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Meeting] SET [Title] = @Title, [Description] = @Description, [From] = @From, [To] = @To, [MeetingRoomId] = @MeetingRoomId, [Notes] = @Notes, [CreatedBy] = @CreatedBy, [Canceled] = @Canceled WHERE (([Id] = @Original_Id) AND ([Title] = @Original_Title) AND ([Description] = @Original_Description) AND ([From] = @Original_From) AND ([To] = @Original_To) AND ([MeetingRoomId] = @Original_MeetingRoomId) AND ([CreatedBy] = @Original_CreatedBy) AND ([Canceled] = @Original_Canceled));
SELECT Id, Title, Description, [From], [To], MeetingRoomId, Notes, CreatedBy, Canceled FROM Meeting WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@From" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="From" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@To" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="To" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MeetingRoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MeetingRoomId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Notes" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Notes" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CreatedBy" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreatedBy" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Canceled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Canceled" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_From" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="From" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_To" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="To" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MeetingRoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MeetingRoomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CreatedBy" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreatedBy" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Canceled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Canceled" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Title" DataSetColumn="Title" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="From" DataSetColumn="From" />
              <Mapping SourceColumn="To" DataSetColumn="To" />
              <Mapping SourceColumn="MeetingRoomId" DataSetColumn="MeetingRoomId" />
              <Mapping SourceColumn="Notes" DataSetColumn="Notes" />
              <Mapping SourceColumn="CreatedBy" DataSetColumn="CreatedBy" />
              <Mapping SourceColumn="Canceled" DataSetColumn="Canceled" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MeetingGroupTableAdapter" GeneratorDataComponentClassName="MeetingGroupTableAdapter" Name="MeetingGroup" UserDataComponentName="MeetingGroupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MeetingManagementDatabaseConnectionString (Settings)" DbObjectName="MeetingManagementDatabase.dbo.MeetingGroup" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MeetingGroup] WHERE (([GroupId] = @Original_GroupId) AND ([MeetingId] = @Original_MeetingId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MeetingId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MeetingId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MeetingGroup] ([GroupId], [MeetingId]) VALUES (@GroupId, @MeetingId);
SELECT GroupId, MeetingId FROM MeetingGroup WHERE (GroupId = @GroupId) AND (MeetingId = @MeetingId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MeetingId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MeetingId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GroupId, MeetingId FROM dbo.MeetingGroup</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MeetingGroup] SET [GroupId] = @GroupId, [MeetingId] = @MeetingId WHERE (([GroupId] = @Original_GroupId) AND ([MeetingId] = @Original_MeetingId));
SELECT GroupId, MeetingId FROM MeetingGroup WHERE (GroupId = @GroupId) AND (MeetingId = @MeetingId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MeetingId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MeetingId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MeetingId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MeetingId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GroupId" DataSetColumn="GroupId" />
              <Mapping SourceColumn="MeetingId" DataSetColumn="MeetingId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MeetingRoomTableAdapter" GeneratorDataComponentClassName="MeetingRoomTableAdapter" Name="MeetingRoom" UserDataComponentName="MeetingRoomTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MeetingManagementDatabaseConnectionString (Settings)" DbObjectName="MeetingManagementDatabase.dbo.MeetingRoom" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MeetingRoom] WHERE (([Id] = @Original_Id) AND ([RoomName] = @Original_RoomName) AND ([Location] = @Original_Location) AND ([NumberOfSeats] = @Original_NumberOfSeats) AND ([HasPhone] = @Original_HasPhone) AND ([HasProjector] = @Original_HasProjector) AND ([Disabled] = @Original_Disabled))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoomName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoomName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Location" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Location" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_NumberOfSeats" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumberOfSeats" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_HasPhone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="HasPhone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_HasProjector" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="HasProjector" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Disabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Disabled" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MeetingRoom] ([RoomName], [Location], [NumberOfSeats], [HasPhone], [HasProjector], [Disabled]) VALUES (@RoomName, @Location, @NumberOfSeats, @HasPhone, @HasProjector, @Disabled);
SELECT Id, RoomName, Location, NumberOfSeats, HasPhone, HasProjector, Disabled FROM MeetingRoom WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoomName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoomName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Location" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Location" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@NumberOfSeats" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumberOfSeats" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@HasPhone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="HasPhone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@HasProjector" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="HasProjector" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Disabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Disabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, RoomName, Location, NumberOfSeats, HasPhone, HasProjector, Disabled FROM dbo.MeetingRoom</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MeetingRoom] SET [RoomName] = @RoomName, [Location] = @Location, [NumberOfSeats] = @NumberOfSeats, [HasPhone] = @HasPhone, [HasProjector] = @HasProjector, [Disabled] = @Disabled WHERE (([Id] = @Original_Id) AND ([RoomName] = @Original_RoomName) AND ([Location] = @Original_Location) AND ([NumberOfSeats] = @Original_NumberOfSeats) AND ([HasPhone] = @Original_HasPhone) AND ([HasProjector] = @Original_HasProjector) AND ([Disabled] = @Original_Disabled));
SELECT Id, RoomName, Location, NumberOfSeats, HasPhone, HasProjector, Disabled FROM MeetingRoom WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoomName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoomName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Location" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Location" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@NumberOfSeats" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumberOfSeats" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@HasPhone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="HasPhone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@HasProjector" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="HasProjector" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Disabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Disabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoomName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoomName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Location" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Location" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_NumberOfSeats" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumberOfSeats" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_HasPhone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="HasPhone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_HasProjector" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="HasProjector" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Disabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Disabled" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="RoomName" DataSetColumn="RoomName" />
              <Mapping SourceColumn="Location" DataSetColumn="Location" />
              <Mapping SourceColumn="NumberOfSeats" DataSetColumn="NumberOfSeats" />
              <Mapping SourceColumn="HasPhone" DataSetColumn="HasPhone" />
              <Mapping SourceColumn="HasProjector" DataSetColumn="HasProjector" />
              <Mapping SourceColumn="Disabled" DataSetColumn="Disabled" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MeetingUserTableAdapter" GeneratorDataComponentClassName="MeetingUserTableAdapter" Name="MeetingUser" UserDataComponentName="MeetingUserTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MeetingManagementDatabaseConnectionString (Settings)" DbObjectName="MeetingManagementDatabase.dbo.MeetingUser" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MeetingUser] WHERE (([MeetingId] = @Original_MeetingId) AND ([UserId] = @Original_UserId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MeetingId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MeetingId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MeetingUser] ([MeetingId], [UserId]) VALUES (@MeetingId, @UserId);
SELECT MeetingId, UserId FROM MeetingUser WHERE (MeetingId = @MeetingId) AND (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MeetingId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MeetingId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MeetingId, UserId FROM dbo.MeetingUser</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MeetingUser] SET [MeetingId] = @MeetingId, [UserId] = @UserId WHERE (([MeetingId] = @Original_MeetingId) AND ([UserId] = @Original_UserId));
SELECT MeetingId, UserId FROM MeetingUser WHERE (MeetingId = @MeetingId) AND (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MeetingId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MeetingId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MeetingId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MeetingId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MeetingId" DataSetColumn="MeetingId" />
              <Mapping SourceColumn="UserId" DataSetColumn="UserId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserTableAdapter" GeneratorDataComponentClassName="UserTableAdapter" Name="User" UserDataComponentName="UserTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MeetingManagementDatabaseConnectionString (Settings)" DbObjectName="MeetingManagementDatabase.dbo.[User]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[User] WHERE (([Id] = @Original_Id) AND ([Username] = @Original_Username) AND ([Role] = @Original_Role) AND ([Disabled] = @Original_Disabled))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Role" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Role" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Disabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Disabled" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[User] ([Username], [Role], [Disabled]) VALUES (@Username, @Role, @Disabled);
SELECT Id, Username, Role, Disabled FROM [User] WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Role" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Role" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Disabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Disabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Username, Role, Disabled FROM dbo.[User]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[User] SET [Username] = @Username, [Role] = @Role, [Disabled] = @Disabled WHERE (([Id] = @Original_Id) AND ([Username] = @Original_Username) AND ([Role] = @Original_Role) AND ([Disabled] = @Original_Disabled));
SELECT Id, Username, Role, Disabled FROM [User] WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Role" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Role" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Disabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Disabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Role" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Role" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Disabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Disabled" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Username" DataSetColumn="Username" />
              <Mapping SourceColumn="Role" DataSetColumn="Role" />
              <Mapping SourceColumn="Disabled" DataSetColumn="Disabled" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MeetingManagementDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="MeetingManagementDataSet" msprop:Generator_UserDSName="MeetingManagementDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Group" msprop:Generator_TableClassName="GroupDataTable" msprop:Generator_TableVarName="tableGroup" msprop:Generator_TablePropName="Group" msprop:Generator_RowDeletingName="GroupRowDeleting" msprop:Generator_RowChangingName="GroupRowChanging" msprop:Generator_RowEvHandlerName="GroupRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupRowDeleted" msprop:Generator_UserTableName="Group" msprop:Generator_RowChangedName="GroupRowChanged" msprop:Generator_RowEvArgName="GroupRowChangeEvent" msprop:Generator_RowClassName="GroupRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="GroupName" msprop:Generator_ColumnVarNameInTable="columnGroupName" msprop:Generator_ColumnPropNameInRow="GroupName" msprop:Generator_ColumnPropNameInTable="GroupNameColumn" msprop:Generator_UserColumnName="GroupName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Disabled" msprop:Generator_ColumnVarNameInTable="columnDisabled" msprop:Generator_ColumnPropNameInRow="Disabled" msprop:Generator_ColumnPropNameInTable="DisabledColumn" msprop:Generator_UserColumnName="Disabled" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="GroupUser" msprop:Generator_TableClassName="GroupUserDataTable" msprop:Generator_TableVarName="tableGroupUser" msprop:Generator_TablePropName="GroupUser" msprop:Generator_RowDeletingName="GroupUserRowDeleting" msprop:Generator_RowChangingName="GroupUserRowChanging" msprop:Generator_RowEvHandlerName="GroupUserRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupUserRowDeleted" msprop:Generator_UserTableName="GroupUser" msprop:Generator_RowChangedName="GroupUserRowChanged" msprop:Generator_RowEvArgName="GroupUserRowChangeEvent" msprop:Generator_RowClassName="GroupUserRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GroupId" msprop:Generator_ColumnVarNameInTable="columnGroupId" msprop:Generator_ColumnPropNameInRow="GroupId" msprop:Generator_ColumnPropNameInTable="GroupIdColumn" msprop:Generator_UserColumnName="GroupId" type="xs:int" />
              <xs:element name="UserId" msprop:Generator_ColumnVarNameInTable="columnUserId" msprop:Generator_ColumnPropNameInRow="UserId" msprop:Generator_ColumnPropNameInTable="UserIdColumn" msprop:Generator_UserColumnName="UserId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Meeting" msprop:Generator_TableClassName="MeetingDataTable" msprop:Generator_TableVarName="tableMeeting" msprop:Generator_TablePropName="Meeting" msprop:Generator_RowDeletingName="MeetingRowDeleting" msprop:Generator_RowChangingName="MeetingRowChanging" msprop:Generator_RowEvHandlerName="MeetingRowChangeEventHandler" msprop:Generator_RowDeletedName="MeetingRowDeleted" msprop:Generator_UserTableName="Meeting" msprop:Generator_RowChangedName="MeetingRowChanged" msprop:Generator_RowEvArgName="MeetingRowChangeEvent" msprop:Generator_RowClassName="MeetingRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Title" msprop:Generator_ColumnVarNameInTable="columnTitle" msprop:Generator_ColumnPropNameInRow="Title" msprop:Generator_ColumnPropNameInTable="TitleColumn" msprop:Generator_UserColumnName="Title">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="From" msprop:Generator_ColumnVarNameInTable="columnFrom" msprop:Generator_ColumnPropNameInRow="From" msprop:Generator_ColumnPropNameInTable="FromColumn" msprop:Generator_UserColumnName="From" type="xs:dateTime" />
              <xs:element name="To" msprop:Generator_ColumnVarNameInTable="columnTo" msprop:Generator_ColumnPropNameInRow="To" msprop:Generator_ColumnPropNameInTable="ToColumn" msprop:Generator_UserColumnName="To" type="xs:dateTime" />
              <xs:element name="MeetingRoomId" msprop:Generator_ColumnVarNameInTable="columnMeetingRoomId" msprop:Generator_ColumnPropNameInRow="MeetingRoomId" msprop:Generator_ColumnPropNameInTable="MeetingRoomIdColumn" msprop:Generator_UserColumnName="MeetingRoomId" type="xs:int" />
              <xs:element name="Notes" msprop:Generator_ColumnVarNameInTable="columnNotes" msprop:Generator_ColumnPropNameInRow="Notes" msprop:Generator_ColumnPropNameInTable="NotesColumn" msprop:Generator_UserColumnName="Notes">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CreatedBy" msprop:Generator_ColumnVarNameInTable="columnCreatedBy" msprop:Generator_ColumnPropNameInRow="CreatedBy" msprop:Generator_ColumnPropNameInTable="CreatedByColumn" msprop:Generator_UserColumnName="CreatedBy" type="xs:int" />
              <xs:element name="Canceled" msprop:Generator_ColumnVarNameInTable="columnCanceled" msprop:Generator_ColumnPropNameInRow="Canceled" msprop:Generator_ColumnPropNameInTable="CanceledColumn" msprop:Generator_UserColumnName="Canceled" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MeetingGroup" msprop:Generator_TableClassName="MeetingGroupDataTable" msprop:Generator_TableVarName="tableMeetingGroup" msprop:Generator_TablePropName="MeetingGroup" msprop:Generator_RowDeletingName="MeetingGroupRowDeleting" msprop:Generator_RowChangingName="MeetingGroupRowChanging" msprop:Generator_RowEvHandlerName="MeetingGroupRowChangeEventHandler" msprop:Generator_RowDeletedName="MeetingGroupRowDeleted" msprop:Generator_UserTableName="MeetingGroup" msprop:Generator_RowChangedName="MeetingGroupRowChanged" msprop:Generator_RowEvArgName="MeetingGroupRowChangeEvent" msprop:Generator_RowClassName="MeetingGroupRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GroupId" msprop:Generator_ColumnVarNameInTable="columnGroupId" msprop:Generator_ColumnPropNameInRow="GroupId" msprop:Generator_ColumnPropNameInTable="GroupIdColumn" msprop:Generator_UserColumnName="GroupId" type="xs:int" />
              <xs:element name="MeetingId" msprop:Generator_ColumnVarNameInTable="columnMeetingId" msprop:Generator_ColumnPropNameInRow="MeetingId" msprop:Generator_ColumnPropNameInTable="MeetingIdColumn" msprop:Generator_UserColumnName="MeetingId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MeetingRoom" msprop:Generator_TableClassName="MeetingRoomDataTable" msprop:Generator_TableVarName="tableMeetingRoom" msprop:Generator_TablePropName="MeetingRoom" msprop:Generator_RowDeletingName="MeetingRoomRowDeleting" msprop:Generator_RowChangingName="MeetingRoomRowChanging" msprop:Generator_RowEvHandlerName="MeetingRoomRowChangeEventHandler" msprop:Generator_RowDeletedName="MeetingRoomRowDeleted" msprop:Generator_UserTableName="MeetingRoom" msprop:Generator_RowChangedName="MeetingRoomRowChanged" msprop:Generator_RowEvArgName="MeetingRoomRowChangeEvent" msprop:Generator_RowClassName="MeetingRoomRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="RoomName" msprop:Generator_ColumnVarNameInTable="columnRoomName" msprop:Generator_ColumnPropNameInRow="RoomName" msprop:Generator_ColumnPropNameInTable="RoomNameColumn" msprop:Generator_UserColumnName="RoomName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Location" msprop:Generator_ColumnVarNameInTable="columnLocation" msprop:Generator_ColumnPropNameInRow="Location" msprop:Generator_ColumnPropNameInTable="LocationColumn" msprop:Generator_UserColumnName="Location">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="NumberOfSeats" msprop:Generator_ColumnVarNameInTable="columnNumberOfSeats" msprop:Generator_ColumnPropNameInRow="NumberOfSeats" msprop:Generator_ColumnPropNameInTable="NumberOfSeatsColumn" msprop:Generator_UserColumnName="NumberOfSeats" type="xs:int" />
              <xs:element name="HasPhone" msprop:Generator_ColumnVarNameInTable="columnHasPhone" msprop:Generator_ColumnPropNameInRow="HasPhone" msprop:Generator_ColumnPropNameInTable="HasPhoneColumn" msprop:Generator_UserColumnName="HasPhone" type="xs:boolean" />
              <xs:element name="HasProjector" msprop:Generator_ColumnVarNameInTable="columnHasProjector" msprop:Generator_ColumnPropNameInRow="HasProjector" msprop:Generator_ColumnPropNameInTable="HasProjectorColumn" msprop:Generator_UserColumnName="HasProjector" type="xs:boolean" />
              <xs:element name="Disabled" msprop:Generator_ColumnVarNameInTable="columnDisabled" msprop:Generator_ColumnPropNameInRow="Disabled" msprop:Generator_ColumnPropNameInTable="DisabledColumn" msprop:Generator_UserColumnName="Disabled" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MeetingUser" msprop:Generator_TableClassName="MeetingUserDataTable" msprop:Generator_TableVarName="tableMeetingUser" msprop:Generator_TablePropName="MeetingUser" msprop:Generator_RowDeletingName="MeetingUserRowDeleting" msprop:Generator_RowChangingName="MeetingUserRowChanging" msprop:Generator_RowEvHandlerName="MeetingUserRowChangeEventHandler" msprop:Generator_RowDeletedName="MeetingUserRowDeleted" msprop:Generator_UserTableName="MeetingUser" msprop:Generator_RowChangedName="MeetingUserRowChanged" msprop:Generator_RowEvArgName="MeetingUserRowChangeEvent" msprop:Generator_RowClassName="MeetingUserRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MeetingId" msprop:Generator_ColumnVarNameInTable="columnMeetingId" msprop:Generator_ColumnPropNameInRow="MeetingId" msprop:Generator_ColumnPropNameInTable="MeetingIdColumn" msprop:Generator_UserColumnName="MeetingId" type="xs:int" />
              <xs:element name="UserId" msprop:Generator_ColumnVarNameInTable="columnUserId" msprop:Generator_ColumnPropNameInRow="UserId" msprop:Generator_ColumnPropNameInTable="UserIdColumn" msprop:Generator_UserColumnName="UserId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="User" msprop:Generator_TableClassName="UserDataTable" msprop:Generator_TableVarName="tableUser" msprop:Generator_TablePropName="User" msprop:Generator_RowDeletingName="UserRowDeleting" msprop:Generator_RowChangingName="UserRowChanging" msprop:Generator_RowEvHandlerName="UserRowChangeEventHandler" msprop:Generator_RowDeletedName="UserRowDeleted" msprop:Generator_UserTableName="User" msprop:Generator_RowChangedName="UserRowChanged" msprop:Generator_RowEvArgName="UserRowChangeEvent" msprop:Generator_RowClassName="UserRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Username" msprop:Generator_ColumnVarNameInTable="columnUsername" msprop:Generator_ColumnPropNameInRow="Username" msprop:Generator_ColumnPropNameInTable="UsernameColumn" msprop:Generator_UserColumnName="Username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Role" msprop:Generator_ColumnVarNameInTable="columnRole" msprop:Generator_ColumnPropNameInRow="Role" msprop:Generator_ColumnPropNameInTable="RoleColumn" msprop:Generator_UserColumnName="Role">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Disabled" msprop:Generator_ColumnVarNameInTable="columnDisabled" msprop:Generator_ColumnPropNameInRow="Disabled" msprop:Generator_ColumnPropNameInTable="DisabledColumn" msprop:Generator_UserColumnName="Disabled" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Group" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="GroupUser_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:GroupUser" />
      <xs:field xpath="mstns:GroupId" />
      <xs:field xpath="mstns:UserId" />
    </xs:unique>
    <xs:unique name="Meeting_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Meeting" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="MeetingGroup_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MeetingGroup" />
      <xs:field xpath="mstns:GroupId" />
      <xs:field xpath="mstns:MeetingId" />
    </xs:unique>
    <xs:unique name="MeetingRoom_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MeetingRoom" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="MeetingUser_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MeetingUser" />
      <xs:field xpath="mstns:MeetingId" />
      <xs:field xpath="mstns:UserId" />
    </xs:unique>
    <xs:unique name="User_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:User" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_dbo.GroupUser_dbo.Group_GroupId" msdata:parent="Group" msdata:child="GroupUser" msdata:parentkey="Id" msdata:childkey="GroupId" msprop:Generator_UserChildTable="GroupUser" msprop:Generator_ChildPropName="GetGroupUserRows" msprop:Generator_UserRelationName="FK_dbo.GroupUser_dbo.Group_GroupId" msprop:Generator_ParentPropName="GroupRow" msprop:Generator_RelationVarName="_relationFK_dbo_GroupUser_dbo_Group_GroupId" msprop:Generator_UserParentTable="Group" />
      <msdata:Relationship name="FK_dbo.GroupUser_dbo.User_UserId" msdata:parent="User" msdata:child="GroupUser" msdata:parentkey="Id" msdata:childkey="UserId" msprop:Generator_UserChildTable="GroupUser" msprop:Generator_ChildPropName="GetGroupUserRows" msprop:Generator_UserRelationName="FK_dbo.GroupUser_dbo.User_UserId" msprop:Generator_RelationVarName="_relationFK_dbo_GroupUser_dbo_User_UserId" msprop:Generator_UserParentTable="User" msprop:Generator_ParentPropName="UserRow" />
      <msdata:Relationship name="FK_dbo.Meeting_dbo.MeetingRoom_MeetingRoomId" msdata:parent="MeetingRoom" msdata:child="Meeting" msdata:parentkey="Id" msdata:childkey="MeetingRoomId" msprop:Generator_UserChildTable="Meeting" msprop:Generator_ChildPropName="GetMeetingRows" msprop:Generator_UserRelationName="FK_dbo.Meeting_dbo.MeetingRoom_MeetingRoomId" msprop:Generator_RelationVarName="_relationFK_dbo_Meeting_dbo_MeetingRoom_MeetingRoomId" msprop:Generator_UserParentTable="MeetingRoom" msprop:Generator_ParentPropName="MeetingRoomRow" />
      <msdata:Relationship name="FK_dbo.Meeting_dbo.User_CreatedBy" msdata:parent="User" msdata:child="Meeting" msdata:parentkey="Id" msdata:childkey="CreatedBy" msprop:Generator_UserChildTable="Meeting" msprop:Generator_ChildPropName="GetMeetingRows" msprop:Generator_UserRelationName="FK_dbo.Meeting_dbo.User_CreatedBy" msprop:Generator_RelationVarName="_relationFK_dbo_Meeting_dbo_User_CreatedBy" msprop:Generator_UserParentTable="User" msprop:Generator_ParentPropName="UserRow" />
      <msdata:Relationship name="FK_dbo.MeetingGroup_dbo.Group_GroupId" msdata:parent="Group" msdata:child="MeetingGroup" msdata:parentkey="Id" msdata:childkey="GroupId" msprop:Generator_UserChildTable="MeetingGroup" msprop:Generator_ChildPropName="GetMeetingGroupRows" msprop:Generator_UserRelationName="FK_dbo.MeetingGroup_dbo.Group_GroupId" msprop:Generator_ParentPropName="GroupRow" msprop:Generator_RelationVarName="_relationFK_dbo_MeetingGroup_dbo_Group_GroupId" msprop:Generator_UserParentTable="Group" />
      <msdata:Relationship name="FK_dbo.MeetingGroup_dbo.Meeting_MeetingId" msdata:parent="Meeting" msdata:child="MeetingGroup" msdata:parentkey="Id" msdata:childkey="MeetingId" msprop:Generator_UserChildTable="MeetingGroup" msprop:Generator_ChildPropName="GetMeetingGroupRows" msprop:Generator_UserRelationName="FK_dbo.MeetingGroup_dbo.Meeting_MeetingId" msprop:Generator_ParentPropName="MeetingRow" msprop:Generator_RelationVarName="_relationFK_dbo_MeetingGroup_dbo_Meeting_MeetingId" msprop:Generator_UserParentTable="Meeting" />
      <msdata:Relationship name="FK_dbo.MeetingUser_dbo.Meeting_MeetingId" msdata:parent="Meeting" msdata:child="MeetingUser" msdata:parentkey="Id" msdata:childkey="MeetingId" msprop:Generator_UserChildTable="MeetingUser" msprop:Generator_ChildPropName="GetMeetingUserRows" msprop:Generator_UserRelationName="FK_dbo.MeetingUser_dbo.Meeting_MeetingId" msprop:Generator_ParentPropName="MeetingRow" msprop:Generator_RelationVarName="_relationFK_dbo_MeetingUser_dbo_Meeting_MeetingId" msprop:Generator_UserParentTable="Meeting" />
      <msdata:Relationship name="FK_dbo.MeetingUser_dbo.User_UserId" msdata:parent="User" msdata:child="MeetingUser" msdata:parentkey="Id" msdata:childkey="UserId" msprop:Generator_UserChildTable="MeetingUser" msprop:Generator_ChildPropName="GetMeetingUserRows" msprop:Generator_UserRelationName="FK_dbo.MeetingUser_dbo.User_UserId" msprop:Generator_RelationVarName="_relationFK_dbo_MeetingUser_dbo_User_UserId" msprop:Generator_UserParentTable="User" msprop:Generator_ParentPropName="UserRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>